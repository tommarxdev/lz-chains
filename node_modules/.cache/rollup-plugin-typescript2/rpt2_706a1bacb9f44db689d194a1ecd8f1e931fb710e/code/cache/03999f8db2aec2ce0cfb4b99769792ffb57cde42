{"code":"import { ChainId, ChainKey, ChainListId, ChainStage } from \"../enums\";\r\n// @deprecated - use getChainKey\r\nexport function getNetworkNameByEndpointId(endpointId) {\r\n    return getChainKey(endpointId);\r\n}\r\n// @deprecated - use getChainIdByChainKey\r\nexport function getEndpointIdByName(networkName) {\r\n    return getChainIdByChainKey(networkName);\r\n}\r\nconst CHAIN_STAGE = {\r\n    mainnet: ChainStage.MAINNET,\r\n    testnet: ChainStage.TESTNET,\r\n    sandbox: ChainStage.TESTNET_SANDBOX,\r\n};\r\nexport function getNetworksForEnv(chainStageAsString) {\r\n    const chainStage = CHAIN_STAGE[chainStageAsString];\r\n    if (!chainStage)\r\n        throw new Error(`No ChainStage for ${chainStageAsString}`);\r\n    const networks = [];\r\n    for (const chainIdAsString in ChainId) {\r\n        const chainId = Number(chainIdAsString);\r\n        if (!Number.isFinite(chainId))\r\n            continue;\r\n        if (getChainStage(chainId) === chainStage) {\r\n            networks.push(getChainKey(chainId));\r\n        }\r\n    }\r\n    return networks;\r\n}\r\nexport function getChainStage(chainId) {\r\n    if (chainId < 10000)\r\n        return ChainStage.MAINNET;\r\n    if (chainId < 20000)\r\n        return ChainStage.TESTNET;\r\n    return ChainStage.TESTNET_SANDBOX;\r\n}\r\nexport function getChainKey(chainId) {\r\n    // @ts-ignore\r\n    const key = ChainId[chainId];\r\n    // @ts-ignore\r\n    const chainKey = ChainKey[key];\r\n    if (chainKey)\r\n        return chainKey;\r\n    throw new Error(`No ChainKey for ${chainId}`);\r\n}\r\nexport function getChainListId(chainId) {\r\n    // @ts-ignore\r\n    const key = ChainId[chainId];\r\n    // @ts-ignore\r\n    const chainListId = ChainListId[key];\r\n    if (chainListId)\r\n        return chainListId;\r\n    throw new Error(`No ChainListId for ${chainId}`);\r\n}\r\nexport function getChainIdByChainKey(chainKey) {\r\n    // @ts-ignore\r\n    const key = ChainKey[chainKey];\r\n    // @ts-ignore\r\n    const chainId = ChainId[key];\r\n    if (chainId)\r\n        return chainId;\r\n    throw new Error(`No chainId for ${chainKey}`);\r\n}\r\n//# sourceMappingURL=helpers.js.map","references":["/Users/tom/Desktop/lz-chains-latest/src/enums/index.ts"],"map":"{\"version\":3,\"file\":\"helpers.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/utils/helpers.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,UAAU,CAAA;AAErE,gCAAgC;AAChC,MAAM,UAAU,0BAA0B,CAAC,UAA4B;IACnE,OAAO,WAAW,CAAC,UAAU,CAAC,CAAA;AAClC,CAAC;AAED,yCAAyC;AACzC,MAAM,UAAU,mBAAmB,CAAC,WAA8B;IAC9D,OAAO,oBAAoB,CAAC,WAAuB,CAAC,CAAA;AACxD,CAAC;AAED,MAAM,WAAW,GAA+B;IAC5C,OAAO,EAAE,UAAU,CAAC,OAAO;IAC3B,OAAO,EAAE,UAAU,CAAC,OAAO;IAC3B,OAAO,EAAE,UAAU,CAAC,eAAe;CACtC,CAAA;AAED,MAAM,UAAU,iBAAiB,CAAC,kBAA0B;IACxD,MAAM,UAAU,GAAG,WAAW,CAAC,kBAAkB,CAAC,CAAA;IAClD,IAAI,CAAC,UAAU;QAAE,MAAM,IAAI,KAAK,CAAC,qBAAqB,kBAAkB,EAAE,CAAC,CAAA;IAC3E,MAAM,QAAQ,GAAe,EAAE,CAAA;IAC/B,KAAK,MAAM,eAAe,IAAI,OAAO,EAAE;QACnC,MAAM,OAAO,GAAG,MAAM,CAAC,eAAe,CAAC,CAAA;QACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC;YAAE,SAAQ;QACvC,IAAI,aAAa,CAAC,OAAO,CAAC,KAAM,UAAkB,EAAE;YAChD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAA;SACtC;KACJ;IACD,OAAO,QAAQ,CAAA;AACnB,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,OAAe;IACzC,IAAI,OAAO,GAAG,KAAK;QAAE,OAAO,UAAU,CAAC,OAAO,CAAA;IAC9C,IAAI,OAAO,GAAG,KAAK;QAAE,OAAO,UAAU,CAAC,OAAO,CAAA;IAC9C,OAAO,UAAU,CAAC,eAAe,CAAA;AACrC,CAAC;AAED,MAAM,UAAU,WAAW,CAAC,OAAgB;IACxC,aAAa;IACb,MAAM,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,CAAA;IAC5B,aAAa;IACb,MAAM,QAAQ,GAAa,QAAQ,CAAC,GAAG,CAAC,CAAA;IACxC,IAAI,QAAQ;QAAE,OAAO,QAAQ,CAAA;IAC7B,MAAM,IAAI,KAAK,CAAC,mBAAmB,OAAO,EAAE,CAAC,CAAA;AACjD,CAAC;AAED,MAAM,UAAU,cAAc,CAAC,OAAgB;IAC3C,aAAa;IACb,MAAM,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,CAAA;IAC5B,aAAa;IACb,MAAM,WAAW,GAAgB,WAAW,CAAC,GAAG,CAAC,CAAA;IACjD,IAAI,WAAW;QAAE,OAAO,WAAW,CAAA;IACnC,MAAM,IAAI,KAAK,CAAC,sBAAsB,OAAO,EAAE,CAAC,CAAA;AACpD,CAAC;AAED,MAAM,UAAU,oBAAoB,CAAC,QAAkB;IACnD,aAAa;IACb,MAAM,GAAG,GAAG,QAAQ,CAAC,QAAQ,CAAC,CAAA;IAC9B,aAAa;IACb,MAAM,OAAO,GAAY,OAAO,CAAC,GAAG,CAAC,CAAA;IACrC,IAAI,OAAO;QAAE,OAAO,OAAO,CAAA;IAC3B,MAAM,IAAI,KAAK,CAAC,kBAAkB,QAAQ,EAAE,CAAC,CAAA;AACjD,CAAC\"}","dts":{"name":"/Users/tom/Desktop/lz-chains-latest/utils/helpers.d.ts","writeByteOrderMark":false,"text":"import { ChainId, ChainKey, ChainListId, ChainStage } from \"../enums\";\r\nexport declare function getNetworkNameByEndpointId(endpointId: ChainId | number): ChainKey;\r\nexport declare function getEndpointIdByName(networkName: ChainKey | string): ChainId;\r\nexport declare function getNetworksForEnv(chainStageAsString: string): ChainKey[];\r\nexport declare function getChainStage(chainId: number): ChainStage;\r\nexport declare function getChainKey(chainId: ChainId): ChainKey;\r\nexport declare function getChainListId(chainId: ChainId): ChainListId;\r\nexport declare function getChainIdByChainKey(chainKey: ChainKey): ChainId;\r\n"}}
